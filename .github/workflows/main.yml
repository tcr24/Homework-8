name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          pip install --no-cache-dir -r requirements.txt

      - name: Run tests
        run: |
          pytest tests/test_app.py

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Build Docker image
        run: |
          docker build -t my-new-qr-app .

      - name: Verify Docker image
        run: |
          if [ -z "$(docker images -q my-new-qr-app:latest)" ]; then
            echo "Docker image was not built successfully"
            exit 1
          fi

  push:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: List Docker images
        run: |
          docker images

      - name: Tag Docker image
        run: |
          docker tag my-new-qr-app:latest ${{ secrets.DOCKER_USERNAME }}/homework8:latest

      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/homework8:latest
